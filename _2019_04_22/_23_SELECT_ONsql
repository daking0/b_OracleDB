--1) 주제 : on절을 이용한 조인
--
--2) 용법
--select 테이블1.컬럼, .... 테이블2.컬럼...
--from 테이블1
--join 테이블2 on 조인_조건
--[join 테이블3 on 조인_조건]...
--where 검색_조건
--a) 자연 조인, Using절을 이용한 조인 등을 모두 표현 가능
--b) on절에 조인 조건을 직접 기술함으로 sql문장을 해석하기가 쉽다
--c) 조인되는 컬럼의 이름이 서로 다르거나 비등가조인인 경우 많이 사용된다.
--d) 비 등가 조인과 같은 다양한 조인에 사용한다.
--e) WHERE절의 조건은 AND연산자를 이용 on절에 기술할 수 있다.
--f) on절은 USING절과 혼용해서 사용할 수 있다.
--    -사용가능하지만 피하는 것이 좋다.
    
--각 사원의 근무부서를 검색한다.

SELECT eno 사번, ename 이름, dept.dno 부서번호, dname 부서면
FROM emp
JOIN dept ON emp.dno =dept.dno;

--아래의 4가지 문장의 결과는 동일하다.
SELECT eno, ename, d.dno, dname
FROM emp e, dept d
WHERE e.dno = d.dno;

SELECT eno, ename, dno, dname
FROM emp
NATURAL JOIN dept;

SELECT eno, ename, dno, dname
FROM emp
JOIN dept USING (dno);

SELECT eno, ename, d.dno, dname --공통 칼럼은 반드시 출처를 밝혀준다
FROM emp e
JOIN dept d ON e.dno = d.dno;

--지원 업무를 담당하는 사원의 급여 등급을 검색한다
SELECT eno 사번, ename 이름, job 업무, grade 급여등급
FROM emp
JOIN salgrade ON sal BETWEEN losal AND hisal
WHERE job = '지원';

--아래처럼 하는 것은 비추천
--ON절에는 조인 조것만 주는 것이 원칙 (혼동이 적어진다)
SELECT eno 사번, ename 이름, job 업무, grade 급여등급
FROM emp
JOIN salgrade ON sal BETWEEN losal AND hisal
AND job = '지원'; --비추천하는 방법


--직원의 부서명과 급여 등급을 검색한다.
SELECT eno 사번, ename 이름, dname 부서명, grade 급여등급
FROM emp
JOIN dept USING(dno)
JOIN salgrade ON sal BETWEEN losal AND hisal;

--등가조인과 비등가조인이 모두 필요할 때는 
--원칙을 정해서 사용하는 것이 좋다.
--등가조인은 USING을 사용한다
--비등가조인은 ON절을 사용한다.
--직원의 부서명과 급여 등급을 검색한다.

SELECT eno 사번, ename 이름, dname 부서명, grade 급여등급
FROM emp e
JOIN dept d ON e.dno = d.dno 
JOIN salgrade ON sal BETWEEN losal AND hisal;

--자기참조조인
--(하나의 테이블을 2개로 나눠서 조인)
--직원의 이름과 담당 관리자명을 검색한다.
SELECT e1.eno 사번, e1.ename 사원, e2.eno 관리자번호, e2.ename 관리자이름
FROM emp e1
JOIN emp e2 ON e1.mgr = e2.eno;

--1)주제 : 좌우 외부 조인(Left Right Outer Join)

--2)용법
--SELECT 테이블1.컬럼, ... 테이블2.컬럼...
--FROM 테이블1
--(Left|Right|Full] [Outer] Join 테이블2
--[On 조인_조건 | Using (조인_컬럼)]

--Where 검색_조건
--a)LEFT : 테이블1을 왼쪽 테이블이라고 부르고 
--        왼쪽 테이블에 조인 조건과 일치하지 않은 행도 검색에 포함한다.
--b)RIGHT : 테이블2를 오른쪽 테이블이라고 부르고
--          오른쪽 에티블에 조인 조건과 일치하지 않은 행도 검색에 포함한다.
--c)FULL : 양쪽 테이블 모두에서 조인 조건에 일치하지 않은 행을 검색에 포함한다.
--         이전(+) 기호를 이용한 외부조인으로는 불가능한 표현이다.
--d) 조인 조건은 ON절이나 USING절을 모두 사용할 수 있다.
--e) 자연 조인과 혼용해서 사용할 수 없다.
--f) OUTER는 생략이 가능하다.


--사원의 이름과 소속 부서를 검색한다.
SELECT eno 사번, ename 이름, dno 부서번호, dname 부서명
FROM emp
RIGHT JOIN dept USING(dno);

--1) 주제: 교차 조인(Cross Join)
--   교차 조인은 기존에 조인문장에서 조인 조건이 생략된 형태의 조인이다.
--   조인 문장에서 조인조건이 생략될 경우 조인되는 테이블의 각각의 행들이 모두 매핑된 데이터가 검색되는데
--   이것을 카테이션 곱(Catersian Produce)라 부른다.
--   일반적인 검색에서는 카테이션 곱은 잘못된 검색 오류이지만 특별한 경우 의도적으로 이를 검색하는 경우도 있다.
--   이렇게 의도적으로 검색된 카테이션 곱을 교차 조인이라고 한다.

--2) 용법:
--SELECT 테이블1.컬럼, ..... 테이블2.컬럼...
--FROM 테이블1
--CROSS JOIN 테이블2

--DW(Data Warehouse)등의 전산업무에서 부득이 수행하는 경우가 있다.
SELECT *
FROM emp
CROSS JOIN dept; 

SELECT *
FROM emp, dept; --이것도 같은 것